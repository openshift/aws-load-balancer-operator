apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - command:
        - /manager
        args:
        - "--health-probe-bind-address=:8081"
        - "--metrics-bind-address=127.0.0.1:8080"
        - "--leader-elect"
        - "--image=$(RELATED_IMAGE_CONTROLLER)"
        - "--namespace=$(TARGET_NAMESPACE)"
        - "--trusted-ca-configmap=$(TRUSTED_CA_CONFIGMAP_NAME)"
        - "--webhook-disable-http2"
        image: controller:latest
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        startupProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
          # operator waits 5 mins for self provisioned secret
          failureThreshold: 15
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        env:
          - name: RELATED_IMAGE_CONTROLLER
            # openshift/aws-load-balancer-controller commit: 105552ef8dc36f69988448e14a1ac46d3223fbb9
            # manifest link: https://quay.io/repository/aws-load-balancer-operator/aws-load-balancer-controller/manifest/sha256:72a5057abe61e5e0de19cdaccba81326baf242bf087f74e10f303deeaae181a2
            value: quay.io/aws-load-balancer-operator/aws-load-balancer-controller@sha256:72a5057abe61e5e0de19cdaccba81326baf242bf087f74e10f303deeaae181a2
          - name: TARGET_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: TRUSTED_CA_CONFIGMAP_NAME
            value: aws-load-balancer-operator-trusted-cabundle
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: bound-sa-token
            mountPath: /var/run/secrets/openshift/serviceaccount
            readOnly: true
          - mountPath: /etc/pki/tls/certs/albo-tls-ca-bundle.crt
            name: trusted-cabundle
            subPath: ca-bundle.crt
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: bound-sa-token
          projected:
            defaultMode: 292
            sources:
            - serviceAccountToken:
                audience: openshift
                expirationSeconds: 3600
                path: token
        - name: trusted-cabundle
          configMap:
            defaultMode: 420
            name: aws-load-balancer-operator-trusted-cabundle
