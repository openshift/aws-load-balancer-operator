apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "elbv2.k8s.aws/v1alpha1",
          "kind": "TargetGroupBinding",
          "metadata": {
            "name": "my-tgb"
          },
          "spec": {
            "serviceRef": {
              "name": "awesome-service",
              "port": 80
            },
            "targetGroupARN": "\u003carn-to-targetGroup\u003e"
          }
        },
        {
          "apiVersion": "elbv2.k8s.aws/v1beta1",
          "kind": "IngressClassParams",
          "metadata": {
            "name": "awesome-class"
          },
          "spec": {
            "group": {
              "name": "my-group"
            }
          }
        },
        {
          "apiVersion": "elbv2.k8s.aws/v1beta1",
          "kind": "TargetGroupBinding",
          "metadata": {
            "name": "my-tgb"
          },
          "spec": {
            "serviceRef": {
              "name": "awesome-service",
              "port": 80
            },
            "targetGroupARN": "\u003carn-to-targetGroup\u003e"
          }
        },
        {
          "apiVersion": "networking.olm.openshift.io/v1alpha1",
          "kind": "AWSLoadBalancerController",
          "metadata": {
            "name": "cluster"
          },
          "spec": {
            "subnetTagging": "Auto"
          }
        }
      ]
    capabilities: Basic Install
    operators.operatorframework.io/builder: operator-sdk-v1.16.0+git
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
  name: aws-load-balancer-operator.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: AWSLoadBalancerController is the Schema for the awsloadbalancercontrollers
        API
      displayName: AWSLoad Balancer Controller
      kind: AWSLoadBalancerController
      name: awsloadbalancercontrollers.networking.olm.openshift.io
      version: v1alpha1
    - kind: IngressClassParams
      name: ingressclassparams.elbv2.k8s.aws
      version: v1beta1
    - kind: TargetGroupBinding
      name: targetgroupbindings.elbv2.k8s.aws
      version: v1alpha1
    - kind: TargetGroupBinding
      name: targetgroupbindings.elbv2.k8s.aws
      version: v1beta1
  description: Operator to simplify management of aws-load-balancer-controller
  displayName: aws-load-balancer-operator
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - pods/status
          verbs:
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services/status
          verbs:
          - patch
          - update
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - elbv2.k8s.aws
          resources:
          - ingressclassparams
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - elbv2.k8s.aws
          resources:
          - targetgroupbindings
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - elbv2.k8s.aws
          resources:
          - targetgroupbindings/status
          verbs:
          - patch
          - update
        - apiGroups:
          - extensions
          resources:
          - ingresses
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - extensions
          resources:
          - ingresses/status
          verbs:
          - patch
          - update
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingressclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses/status
          verbs:
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - admissionregistration.k8s.io
          resources:
          - mutatingwebhookconfigurations
          - validatingwebhookconfigurations
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - cloudcredential.openshift.io
          resources:
          - credentialsrequests
          - credentialsrequests/finalizers
          - credentialsrequests/status
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - config.openshift.io
          resources:
          - infrastructures
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingressclasses
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - networking.olm.openshift.io
          resources:
          - awsloadbalancercontrollers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - networking.olm.openshift.io
          resources:
          - awsloadbalancercontrollers/finalizers
          verbs:
          - update
        - apiGroups:
          - networking.olm.openshift.io
          resources:
          - awsloadbalancercontrollers/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          - rolebindings
          - roles
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: aws-load-balancer-operator-controller-manager
      deployments:
      - name: aws-load-balancer-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --image=$(RELATED_IMAGE_CONTROLLER)
                command:
                - /manager
                env:
                - name: AWS_SHARED_CREDENTIALS_FILE
                  value: /etc/aws-credentials/credentials
                - name: RELATED_IMAGE_CONTROLLER
                  value: docker.io/amazon/aws-alb-ingress-controller:v2.4.1
                image: openshift.io/aws-load-balancer-operator:latest
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                volumeMounts:
                - mountPath: /etc/aws-credentials
                  name: aws-credentials
              securityContext:
                runAsNonRoot: true
              serviceAccountName: aws-load-balancer-operator-controller-manager
              terminationGracePeriodSeconds: 10
              volumes:
              - name: aws-credentials
                secret:
                  items:
                  - key: credentials
                    path: credentials
                  secretName: aws-load-balancer-operator
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: aws-load-balancer-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - aws
  - load-balancer
  - ALB
  - ingress
  links:
  - name: Aws Load Balancer Operator
    url: https://aws-load-balancer-operator.domain
  maturity: alpha
  provider:
    name: Red Hat
    url: https://redhat.com
  version: 0.0.1
